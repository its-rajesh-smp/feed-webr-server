generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum QuestionType{
  SHORT_TEXT
  NUMBER
  EMAIL
  SELECT
  CHECKBOX
}

model User {
  id String @default(uuid()) @id
  email String  @unique
  password String

  userDetail UserDetail?
  workspaces Workspace[]
  workspaceQuestions WorkspaceQuestion[]
  Feedback Feedback[]
  QuestionRespons QuestionResponse[]
}

model UserDetail {
  id String @default(uuid()) @id
  name String
  mobileNumber String

  userId String @unique
  user User @relation(fields: [userId], references: [id])
}

model Workspace {
  id String @default(uuid()) @id
  name String
  logoUrl String?
  title String
  customMessage String
  accessUrl String @default(uuid()) @unique()
  
  userId String
  user User @relation(fields: [userId], references: [id])

  workspaceQuestions WorkspaceQuestion[]
  feedbacks Feedback[]
}

model WorkspaceQuestion {
  id String @default(uuid()) @id
  question String
  type QuestionType
  index Int
  isMandatory Boolean @default(false)
  isRequired Boolean @default(false)

  workspaceId String
  workspace Workspace @relation(fields: [workspaceId], references: [id])
  
  userId String
  user User @relation(fields: [userId], references: [id])

  QuestionResponse QuestionResponse[]
}



model Feedback{
  id String @default(uuid()) @id

  ownerId String
  owner User @relation(fields: [ownerId], references: [id])

  workspaceId String
  workspace Workspace @relation(fields: [workspaceId],references: [id])

  QuestionResponse QuestionResponse[]
}


model QuestionResponse{
  id String @default(uuid()) @id

  answer Json
  
  ownerId String
  owner User @relation(fields: [ownerId], references: [id])

  questionId String
  question WorkspaceQuestion @relation(fields: [questionId],references: [id])

  feedbackId String
  feedback Feedback @relation(fields: [feedbackId], references: [id])
}